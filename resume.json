{
  "name": "David Pettit",
  "title": "Software Developer",
  "contact_email": "dkpettit@gmail.com",
  "github_handle": "Dkpettit",
  "education": {
    "school": "Fanshawe College",
    "degree": "Computer Programmer Analyst",
    "graduated": "December 2020"
  },
  "jobs": [
    {
      "company": {
        "name": "Large International Financial Company based in London",
        "website": ""
      },
      "positions": [
        {
          "title": "Software Developer",
          "duration": "September 2019 &mdash; Present"
        }
      ],
      "description": "Development tasks related to a suite of “Illustration” software used to “Illustrate” customer insurance policies.",
      "accomplishments": [
        "*****",
        "Development Tasks:",
        "*****",
        "Work to migrate and update legacy software applications (VBA, VB6, C++Borland, and others) to more modern technology (c#.net, web based technology), using Visual Studio 2019, VBA and VB6 Professional, Visual Studio Code, SQL Server Management Studio, SQLDbx and SQLDbx x64",
        "Introduced .net service components calling Web Services as reference in existing MSAccess applications -- removing their dependence on stored procedure calls and pass through tables in Sybase Databases that had gone out of support",
        "Introduced security updates to out of support applications such as .net updates and TLS1.2 vs. TLS1.0 ",
        "Analyze existing pre-requisites and dependencies in entire suite of applications for out of support technology and components.",
        "Work independently across multiple projects with conflicting timelines in a demanding environment tracking my efforts and responsibilities in JIRA according to Kanban methodology",
        "Development and testing of features and components committing regularly to Bitbucket and Gitlab",
        "Partner with, manage and support off-shore developers",
        "Coordinate exception requests, in support of legacy software dependencies",
        "Request, deploy, configure and manage Servers, Network devices, test machines, Firewalls, Firewall rules, CSS certs, Ansible, Security/Vulnerability scans",
        "Monitor environments for vulnerabilities, events and issues using Splunk and AppDynamics",
        "Manage Change and Change requests in Service Now",
        "*****",
        "Non-Development tasks:",
        "*****",
        "Collaborate with senior team members, and external resources to learn new skills and seek out learning opportunities.",
        "Respond to incidents, in support of Software, from Service Now",
        "Work with Developers, Technicians, Architects, Specialists to support everything above",
        "Support Business and Users as required",
        "Create, update and maintain documentation, Job Aids and Knowledge Articles related to software, as well as provide all documentation to projects as required (T2M, Estimates, ARPs, etc.)",
        "Communicate through Confluence to collaborate with stakeholders at all levels",
        "Team security coordinator",
        "Disaster Recovery Team Lead 2023",
        "Disaster Recovery SPOC/SME 2020-2022",
        "Work with Vendors to introduce, configure and support 3rd party software Artifacts into Canada Life Environments",
        "Request and configure Virtual Test Machines, and support testing efforts for business and dev teams",
        "Participate in planning, execution and implementation of projects",
        "Collaborate with, coach, mentor and support team to achieve combined and individual goals as defined by Corporate and Team leadership"
      ]
    }
  ],
  "projects": [
    {
      "name": "Dave Pettit's TV Show Collection",
      "website": "https://mernappdave-7eca150cce5f.herokuapp.com/login",
      "code": "https://github.com/Dkpettit/mern-shows",
      "description": "A MERN application that tracks what shows a user is watching, Users are authenticated against a MongoDB users database, assigned a JWT and logged in and out.  A user object is created in localstorage that can be accessed in the App.  Users can search for TV shows via a search that makes a call to an IMDB API exposed on RapidAPI.  Results are displayed in a React component and selected Shows can be added to the Shows DB on Mongo which stores the name, id, and poster url for the show."
    },
    {
      "name": "Dave Pettit's Work Tracker App",
      "website": "https://657739dd18523f18e990512e--ornate-platypus-6b19ca.netlify.app/",
      "code": "https://github.com/Dkpettit/WorkTracker",
      "description": "An application to track the work and Projects I'm working on.  MongoDB, Node, React, Graphql, Apollo Client -- the backend is served from Render and the frontend from Netlify."
    },
    {
      "name": "Under Construction",
      "website": "",
      "code": "",
      "description": ""
    }
  ],
  "skills": {
    "Front_End": [
      "JavaScript",
      "HTML",
      "NPM/Yarn",
      "Bootstrap",
      "Sass",
      "CSS",
      "jQuery"
    ],
    "Back_End": [
      "REST APIs",
      "MySQL",
      "AWS",
      "Django",
      "Node",
      "React",
      "Laravel",
      "Express"
    ],
    "Tools": [
      "Confluence",
      "Git",
      "GitHub",
      "Jira",
      "Bitbucket",
      "Heroku",
      "Digital Ocean",
      "Linux",
      "Ansible",
      "JSON/YAML/XML"
    ]
  }
}
